{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/car.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../reusableComponents/car-card/car-card.component\";\nfunction CarsComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"app-car-card\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const car_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"carData\", car_r2);\n  }\n}\nfunction CarsComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CarsComponent_div_12_div_1_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.carList);\n  }\n}\nexport class CarsComponent {\n  constructor(service) {\n    this.service = service;\n    this.carList = [];\n    const local = localStorage.getItem('zoomUser');\n    if (local != null) {\n      this.loggedobj = JSON.parse(local);\n      console.log('Logged object:', this.loggedobj);\n      console.log('User ID:', this.loggedobj.userId);\n    } else {\n      console.log('No logged user found in localStorage.');\n    }\n  }\n  ngOnInit() {\n    this.getCars();\n  }\n  getCars() {\n    // if (this.loggedobj && this.loggedobj.userId !== undefined) {\n    //   this.service.GetAllCarsByOwnerId(this.loggedobj.userId).subscribe((res: any) => {\n    //     this.carList = res.data;\n    //   }, error => {\n    //     // It's a good practice to handle potential errors from your API calls\n    //     console.error('Failed to load cars:', error);\n    //   });\n    // if(this.loggedobj && this.loggedobj.userId !== undefined){\n    // this.service.GetAllCarsByOwnerId(this.loggedobj.userId).subscribe((res:any)=>{\n    //   console.log(res);\n    //   this.carList = res.data;\n    // })\n    if (this.loggedobj && this.loggedobj.userId !== undefined) {\n      this.service.GetAllCarsByOwnerId(this.loggedobj.userId).subscribe(\n      // Assuming 1 is a valid userId\n      res => {\n        console.log('API response:', res);\n        this.carList = res.data;\n      }, error => {\n        console.error('Failed to load cars:', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CarsComponent_Factory(t) {\n    return new (t || CarsComponent)(i0.ɵɵdirectiveInject(i1.CarService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CarsComponent,\n    selectors: [[\"app-cars\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"row\"], [1, \"col-12\", \"text-end\"], [1, \"btn\", \"btn-success\", \"btn-sm\"], [4, \"ngIf\"], [\"class\", \"col-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-3\"], [3, \"carData\"]],\n    template: function CarsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Document\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3)(8, \"div\", 4)(9, \"button\", 5);\n        i0.ɵɵtext(10, \"Add User\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵtemplate(12, CarsComponent_div_12_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.carList.length > 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.CarCardComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","car_r2","ɵɵtemplate","CarsComponent_div_12_div_1_Template","ctx_r0","carList","CarsComponent","constructor","service","local","localStorage","getItem","loggedobj","JSON","parse","console","log","userId","ngOnInit","getCars","undefined","GetAllCarsByOwnerId","subscribe","res","data","error","_","ɵɵdirectiveInject","i1","CarService","_2","selectors","decls","vars","consts","template","CarsComponent_Template","rf","ctx","ɵɵtext","CarsComponent_div_12_Template","length"],"sources":["D:\\angular\\zcar\\src\\app\\components\\cars\\cars.component.ts","D:\\angular\\zcar\\src\\app\\components\\cars\\cars.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CarService } from 'src/app/services/car.service';\n\n@Component({\n  selector: 'app-cars',\n  templateUrl: './cars.component.html',\n  styleUrls: ['./cars.component.css']\n})\nexport class CarsComponent implements OnInit{\n  loggedobj: any;\n  carList: any[] = [];\nconstructor(private service:CarService){\n  const local = localStorage.getItem('zoomUser');\n  if(local != null){\n    this.loggedobj = JSON.parse(local);\n    console.log('Logged object:', this.loggedobj);\n    console.log('User ID:', this.loggedobj.userId);\n  }\n  else {\n    console.log('No logged user found in localStorage.');\n  }\n\n}\n\n  ngOnInit(): void {\n    this.getCars();\n  }\n\n  getCars(){\n    // if (this.loggedobj && this.loggedobj.userId !== undefined) {\n    //   this.service.GetAllCarsByOwnerId(this.loggedobj.userId).subscribe((res: any) => {\n    //     this.carList = res.data;\n    //   }, error => {\n    //     // It's a good practice to handle potential errors from your API calls\n    //     console.error('Failed to load cars:', error);\n    //   });\n// if(this.loggedobj && this.loggedobj.userId !== undefined){\n    // this.service.GetAllCarsByOwnerId(this.loggedobj.userId).subscribe((res:any)=>{\n    //   console.log(res);\n    //   this.carList = res.data;\n    // })\n    if (this.loggedobj && this.loggedobj.userId !== undefined) {\n    this.service.GetAllCarsByOwnerId(this.loggedobj.userId).subscribe( // Assuming 1 is a valid userId\n    (res: any) => {\n      console.log('API response:', res);\n      this.carList = res.data;\n    }, error => {\n      console.error('Failed to load cars:', error);\n    }\n  \n  );\n  \n}\n\n    }\n    \n  }\n\n\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>\n</head>\n\n<body>\n  <div class=\"row \">\n    <div class=\"col-12 text-end\">\n      <button class=\"btn btn-success btn-sm\">Add User</button>\n    </div>\n    <div class=\"row\">\n\n      <!--<div class=\"col-3\" *ngFor=\"let car of carList\">\n         <app-car-card [carData]=\"car\"></app-car-card> -->\n        <!-- Test with static data -->\n        <!-- <app-car-card [carData]=\"{ brand: 'Test Brand', name: 'Test Name' }\"></app-car-card> -->\n\n        <!-- {{carList|json}} \n      </div> -->\n\n      <div *ngIf=\"carList.length > 0\">\n        <div class=\"col-3\" *ngFor=\"let car of carList\">\n          <app-car-card [carData]=\"car\"></app-car-card>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n</body>\n\n</html>"],"mappings":";;;;;;ICyBQA,EAAA,CAAAC,cAAA,aAA+C;IAC7CD,EAAA,CAAAE,SAAA,sBAA6C;IAC/CF,EAAA,CAAAG,YAAA,EAAM;;;;IADUH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,UAAA,YAAAC,MAAA,CAAe;;;;;IAFjCN,EAAA,CAAAC,cAAA,UAAgC;IAC9BD,EAAA,CAAAO,UAAA,IAAAC,mCAAA,iBAEM;IACRR,EAAA,CAAAG,YAAA,EAAM;;;;IAH+BH,EAAA,CAAAI,SAAA,GAAU;IAAVJ,EAAA,CAAAK,UAAA,YAAAI,MAAA,CAAAC,OAAA,CAAU;;;ADjBrD,OAAM,MAAOC,aAAa;EAG1BC,YAAoBC,OAAkB;IAAlB,KAAAA,OAAO,GAAPA,OAAO;IADzB,KAAAH,OAAO,GAAU,EAAE;IAEnB,MAAMI,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAGF,KAAK,IAAI,IAAI,EAAC;MACf,IAAI,CAACG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC;MAClCM,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACJ,SAAS,CAAC;MAC7CG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC;KAC/C,MACI;MACHF,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;;EAGxD;EAEEE,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAOA,CAAA;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACJ;IACI;IACA;IACA;IACA;IACA,IAAI,IAAI,CAACP,SAAS,IAAI,IAAI,CAACA,SAAS,CAACK,MAAM,KAAKG,SAAS,EAAE;MAC3D,IAAI,CAACZ,OAAO,CAACa,mBAAmB,CAAC,IAAI,CAACT,SAAS,CAACK,MAAM,CAAC,CAACK,SAAS;MAAE;MAClEC,GAAQ,IAAI;QACXR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEO,GAAG,CAAC;QACjC,IAAI,CAAClB,OAAO,GAAGkB,GAAG,CAACC,IAAI;MACzB,CAAC,EAAEC,KAAK,IAAG;QACTV,OAAO,CAACU,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAEF;;EAIC;EAAC,QAAAC,CAAA,G;qBA9CQpB,aAAa,EAAAX,EAAA,CAAAgC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbxB,aAAa;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP1B1C,EAAA,CAAAC,cAAA,cAAgB;QAGdD,EAAA,CAAAE,SAAA,cAAsB;QAEtBF,EAAA,CAAAC,cAAA,YAAO;QAAAD,EAAA,CAAA4C,MAAA,eAAQ;QAAA5C,EAAA,CAAAG,YAAA,EAAQ;QAGzBH,EAAA,CAAAC,cAAA,WAAM;QAGuCD,EAAA,CAAA4C,MAAA,gBAAQ;QAAA5C,EAAA,CAAAG,YAAA,EAAS;QAE1DH,EAAA,CAAAC,cAAA,cAAiB;QAUfD,EAAA,CAAAO,UAAA,KAAAsC,6BAAA,iBAIM;QAER7C,EAAA,CAAAG,YAAA,EAAM;;;QANEH,EAAA,CAAAI,SAAA,IAAwB;QAAxBJ,EAAA,CAAAK,UAAA,SAAAsC,GAAA,CAAAjC,OAAA,CAAAoC,MAAA,KAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}